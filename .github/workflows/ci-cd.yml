name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: database
  DATABASE_URL: postgresql://user:password@localhost:5432/database
  NODE_ENV: test

jobs:
  install_backend:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install backend dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: backend

  install_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install frontend dependencies
        run: pnpm install
        working-directory: frontend

  test_backend:
    runs-on: ubuntu-latest
    needs: [install_backend]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install backend dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: backend
      - name: Prisma generate
        run: npx prisma generate
        working-directory: backend
      - name: Prisma migrate
        run: npx prisma migrate dev --name init
        working-directory: backend
      - name: Run backend tests
        run: npm run test
        working-directory: backend